// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String     @id @default(uuid())
  username  String
  email     String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  reviews   Reviews[]
  builders  Builders[]

  @@map("users")
}

model Category {
  id         String      @id @default(uuid())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  components Component[]

  @@map("category")
}

model Component {
  id          String    @id @default(uuid())
  brand       String
  model       String
  description String
  price       String
  stock       String
  categoryId  String
  categories  Category  @relation(fields: [categoryId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviews     Reviews[]

  @@map("components")
}

model BuildComponent {
  id        String   @id @default(uuid())
  quantity  String
  builderId String
  builders  Builders @relation(fields: [builderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("build_components")
}

model Reviews {
  id          String    @id @default(uuid())
  comment     String
  userId      String
  users       Users     @relation(fields: [userId], references: [id])
  componentId String
  components  Component @relation(fields: [componentId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("reviews")
}

model Builders {
  id              String           @id @default(uuid())
  name            String
  userId          String
  users           Users            @relation(fields: [userId], references: [id])
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  buildComponents BuildComponent[]

  @@map("builders")
}
